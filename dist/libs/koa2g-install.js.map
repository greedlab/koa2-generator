{"version":3,"sources":["libs/koa2g-install.js"],"names":[],"mappings":";;;;;;;gEAyBA,iBAAuC,SAAvC;AAAA;AAAA;AAAA;AAAA;AAAA;AACQ,4BADR,GACe,eAAK,IAAL,CAAU,SAAV,EAAqB,2BAArB,CADf;AAAA;AAAA,+BAEU,UAAU,YAAV,CAAuB,IAAvB,EAA4B,SAA5B,CAFV;;AAAA;AAGI,gCAAQ,KAAR,CAAc,SAAd;AAHJ;AAAA,+BAIuB,QAAQ,OAAR,EAJvB;;AAAA;AAIQ,8BAJR;;AAAA,8BAKQ,UAAU,CALlB;AAAA;AAAA;AAAA;;AAAA;AAAA,+BAMc,QAAQ,wBAAR,EANd;;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,K;;oBAAe,uB;;;;;;iEAUf,kBAAsC,SAAtC;AAAA;AAAA;AAAA;AAAA;AAAA;AACQ,4BADR,GACe,eAAK,IAAL,CAAU,SAAV,EAAqB,0BAArB,CADf;;AAEI,kCAAU,YAAV,CAAuB,IAAvB,EAA4B,SAA5B;AACA,gCAAQ,KAAR,CAAc,SAAd;AAHJ;AAAA,+BAIuB,QAAQ,OAAR,EAJvB;;AAAA;AAIQ,8BAJR;;AAAA,8BAKQ,UAAU,CALlB;AAAA;AAAA;AAAA;;AAAA;AAAA,+BAMc,QAAQ,uBAAR,EANd;;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,K;;oBAAe,sB;;;;;AAUf;;;;;;;;;iEAMA,kBAAkC,SAAlC,EAA6C,GAA7C;AAAA;AAAA;AAAA;AAAA;AAAA,8BACQ,QAAQ,MADhB;AAAA;AAAA;AAAA;;AAAA;AAAA,+BAEc,uBAAuB,SAAvB,CAFd;;AAAA;AAAA;AAAA;;AAAA;AAAA;AAAA,+BAIc,wBAAwB,SAAxB,CAJd;;AAAA;AAAA;AAAA,+BAMU,cAAc,SAAd,EAAyB,oBAAQ,GAAjC,CANV;;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,K;;oBAAe,kB;;;;;;iEASf,kBAA6B,SAA7B,EAAwC,GAAxC;AAAA;AAAA;AAAA;AAAA;AAAA;AACU,oCADV,GACyB,eAAK,IAAL,CAAU,SAAV,EAAqB,cAArB,CADzB;;AAEI,8BAAM,qBAAqB,YAA3B;AAFJ;AAAA,+BAGyB,UAAU,WAAV,CAAsB,YAAtB,CAHzB;;AAAA;AAGU,8BAHV;;AAAA,6BAIQ,MAJR;AAAA;AAAA;AAAA;;AAAA,uCAKyB,IALzB;AAAA;AAAA,+BAK0C,aAAG,aAAH,CAAiB,YAAjB,CAL1C;;AAAA;AAAA;AAKY,kCALZ,gBAK8B,KAL9B;;AAMQ,mCAAW,IAAX,GAAkB,aAAlB;AACA,4BAAI,QAAQ,MAAZ,EAAoB;AAChB,uCAAW,OAAX,CAAmB,OAAnB,GAA6B,qBAAqB,WAAW,IAAhC,GAAuC,qCAApE;AACA,uCAAW,OAAX,CAAmB,OAAnB,GAA6B,mEAAmE,WAAW,IAA9E,GAAqF,UAAlH;AACH,yBAHD,MAGO;AACH,uCAAW,OAAX,CAAmB,OAAnB,GAA6B,qBAAqB,WAAW,IAAhC,GAAuC,kDAApE;AACA,uCAAW,OAAX,CAAmB,OAAnB,GAA6B,mEAAmE,WAAW,IAA9E,GAAqF,UAAlH;AACH;AAbT;AAAA,+BAcc,aAAG,cAAH,CAAkB,YAAlB,EAA+B,KAAK,SAAL,CAAe,UAAf,EAA0B,IAA1B,EAA+B,CAA/B,CAA/B,CAdd;;AAAA;AAAA;AAAA;;AAAA;AAgBQ,gCAAQ,KAAR,CAAc,uBAAuB,YAAvB,GAAsC,iBAApD;;AAhBR;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,K;;oBAAe,a;;;;;;iEAoBf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAEc,iCAFd,GAE0B,eAAK,OAAL,CAAa,oBAAQ,IAAR,CAAa,KAAb,MAAwB,GAArC,CAF1B;;AAGQ,8BAAM,uBAAuB,SAA7B;AAHR;AAAA,+BAI8B,UAAU,gBAAV,CAA2B,SAA3B,CAJ9B;;AAAA;AAIc,+BAJd;;AAAA,4BAKa,OALb;AAAA;AAAA;AAAA;;AAAA;AAAA,+BAMkB,UAAU,KAAV,CAAgB,SAAhB,CANlB;;AAAA;AAQc,oCARd,GAQ6B,eAAK,IAAL,CAAU,SAAV,EAAqB,cAArB,CAR7B;;AASQ,8BAAM,qBAAqB,YAA3B;;AATR;AAAA,+BAW6B,UAAU,WAAV,CAAsB,YAAtB,CAX7B;;AAAA;AAWc,8BAXd;;AAAA,6BAYY,MAZZ;AAAA;AAAA;AAAA;;AAAA,6BAagB,oBAAQ,KAbxB;AAAA;AAAA;AAAA;;AAAA;AAAA,+BAcsB,mBAAmB,SAAnB,EAA8B,oBAAQ,GAAtC,CAdtB;;AAAA;AAAA;AAAA;;AAAA;AAgBgB,gCAAQ,KAAR,CAAc,uBAAuB,YAAvB,GAAsC,aAApD;;AAhBhB;AAAA;AAAA;;AAAA;AAAA;AAAA,+BAmBkB,mBAAmB,SAAnB,EAA8B,oBAAQ,GAAtC,CAnBlB;;AAAA;AAAA;AAAA;;AAAA;AAAA;AAAA;;AAsBQ,gCAAQ,KAAR;;AAtBR;AAwBI,gCAAQ,IAAR;;AAxBJ;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,K;;oBAAe,I;;;;;AAhFf;;;;AACA;;;;AACA;;;;AACA;;;;AAGA;;IAAY,S;;AACZ;;IAAY,O;;AACZ;;IAAY,S;;AACZ;;;;;;;;AAEA,mBAAS,YAAT;;AAEA,IAAM,UAAU,kBAAI,OAApB;AACA,IAAM,QAAQ,qBAAM,8BAAN,CAAd;;AAEA,oBACK,OADL,CACa,OADb,EAEK,KAFL,CAEW,iCAFX,EAGK,MAHL,CAGY,iBAHZ,EAG+B,yDAH/B,EAIK,MAJL,CAIY,aAJZ,EAI2B,kCAJ3B,EAKK,WALL,CAKiB,kDALjB,EAMK,KANL,CAMW,QAAQ,IANnB;AAOA","file":"libs/koa2g-install.js","sourcesContent":["import program from 'commander';\nimport path from 'path';\nimport fs from 'fs';\nimport Debug from 'debug';\nimport bluebird from 'bluebird';\n\nimport * as path_util from '../utils/path.js';\nimport * as command from '../utils/command.js';\nimport * as copy_util from '../utils/copy';\nimport pkg from '../../package.json';\n\nbluebird.promisifyAll(fs);\n\nconst version = pkg.version;\nconst debug = Debug('koa2-generator:koa2g-install');\n\nprogram\n    .version(version)\n    .usage('[options] [dir](defaults to ./)')\n    .option('-e, --end [end]', 'front(front end) or back(back end). (defaults to front)')\n    .option('-f, --force', 'force on package.json is existed')\n    .description('generate front or back end template base on koa2')\n    .parse(process.argv);\nmain();\n\nasync function installFrontApplication(directory) {\n    let from = path.join(__dirname, '../../node-front-template');\n    await copy_util.copyTemplate(from,directory);\n    process.chdir(directory);\n    let result = await command.npmInit();\n    if (result == 0) {\n        await command.installFrontDependencies();\n    }\n}\n\nasync function installBackApplication(directory) {\n    let from = path.join(__dirname, '../../node-back-template');\n    copy_util.copyTemplate(from,directory);\n    process.chdir(directory);\n    let result = await command.npmInit();\n    if (result == 0) {\n        await command.installBackDependencies();\n    }\n}\n\n/**\n * install front or back application at the given directory `directory`.\n *\n * @param directory install directory\n * @param end front(default) or back\n */\nasync function installApplication(directory, end) {\n    if (end === 'back') {\n        await installBackApplication(directory);\n    } else {\n        await installFrontApplication(directory);\n    }\n    await updatePackage(directory, program.end);\n}\n\nasync function updatePackage(directory, end) {\n    const package_file = path.join(directory, 'package.json');\n    debug('target package: ' + package_file);\n    const exists = await path_util.existedFile(package_file);\n    if (exists) {\n        let packageObj = JSON.parse(await fs.readFileAsync(package_file));\n        packageObj.main = 'dist/app.js';\n        if (end === 'back') {\n            packageObj.scripts.develop = 'PORT=4002 DEBUG=' + packageObj.name + '* nodemon -w dist -e js dist/app.js';\n            packageObj.scripts.release = 'PORT=4002 NODE_ENV=release pm2 start dist/app.js  -i 0 --name ' + packageObj.name + ' --watch';\n        } else {\n            packageObj.scripts.develop = 'PORT=4001 DEBUG=' + packageObj.name + '* nodemon -w dist -e js,html,css,jsx dist/app.js';\n            packageObj.scripts.release = 'PORT=4001 NODE_ENV=release pm2 start dist/app.js  -i 0 --name ' + packageObj.name + ' --watch';\n        }\n        await fs.writeFileAsync(package_file,JSON.stringify(packageObj,null,4));\n    } else {\n        console.error('aborting! because ' + package_file + ' is not existed');\n    }\n}\n\nasync function main() {\n    try {\n        const directory = path.resolve(program.args.shift() || '.');\n        debug('target directory: ' + directory);\n        const existed = await path_util.existedDirectory(directory);\n        if (!existed) {\n            await path_util.mkdir(directory);\n        }\n        const package_file = path.join(directory, 'package.json');\n        debug('target package: ' + package_file);\n\n        const exists = await path_util.existedFile(package_file);\n        if (exists) {\n            if (program.force) {\n                await installApplication(directory, program.end);\n            } else {\n                console.error('aborting! because ' + package_file + ' is existed');\n            }\n        } else {\n            await installApplication(directory, program.end);\n        }\n    } catch (err) {\n        console.error(err);\n    }\n    process.exit();\n}\n"],"sourceRoot":"/source/"}