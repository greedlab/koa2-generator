{"version":3,"sources":["libs/koa2g-install.js"],"names":[],"mappings":"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","file":"libs/koa2g-install.js","sourcesContent":["const program = require('commander');\nconst path = require('path');\nconst fs = require('fs');\nconst child_process = require('child_process');\n\nimport * as path_util from '../utils/path.js';\nimport * as command from '../utils/command.js';\n\nconst pkg = require('../../package.json');\nlet version = pkg.version;\n\nprogram\n    .version(version)\n    .usage('[options]')\n    .option('-d, --directory [directory]', 'the target directory (defaults to ./)')\n    .option('-f, --force', 'force on package.json is existed')\n    .parse(process.argv);\n\nmain();\n\n/**\n * install application at the given directory `directory`.\n *\n * @param directory\n */\nasync function installApplication(directory) {\n    try {\n        let from = path.join(__dirname, '../template');\n        // let to = path.join(directory,'src');\n        let to = directory;\n        console.log('from: ' + from);\n        console.log('to: ' + to);\n\n        let files = await path_util.readdir(from);\n        files.forEach(async function (item) {\n            let fromPath = path.join(from,item);\n            command.copy(fromPath,to);\n        });\n\n        // process.chdir(directory);\n        // let cwd = process.cwd();\n        // console.log('cwd: ' + cwd);\n        // let result = await command.runNpm(['init']);\n        // if (result == 0) {\n        //     await command.installAllDependencies();\n        // }\n    } catch (err) {\n        console.error(err);\n    }\n}\n\nasync function main() {\n    let directory = process.cwd();\n    if (program.directory && program.directory.length > 0) {\n        directory = path.resolve(directory, program.directory);\n    }\n    console.log('directory: ' + directory);\n    try {\n        let existed = await path_util.existedDirectory(directory);\n        if (!existed) {\n            await path_util.mkdir(directory);\n        }\n        let package_file = path.join(directory, 'package.json');\n        console.log('package: ' + package_file);\n        try {\n            let exists = await path_util.existedFile(package_file);\n            if (exists && !program.force) {\n                if (program.force) {\n                    await installApplication(directory);\n                } else {\n                    console.error('aborting! because ' + package_file + ' is existed');\n                }\n            } else {\n                await installApplication(directory);\n            }\n        } catch (err) {\n            console.error(err);\n        }\n\n    } catch (err) {\n        console.error(err);\n    }\n    process.exit();\n}\n"],"sourceRoot":"/source/"}