{"version":3,"sources":["libs/koa2g-update.js"],"names":[],"mappings":";;;;;gEAoBA,iBAAiC,SAAjC,EAA4C,GAA5C;AAAA;AAAA;AAAA;AAAA;AAAA;AACU,oCADV,GACyB,eAAK,IAAL,CAAU,SAAV,EAAqB,cAArB,CADzB;;AAEI,8BAAM,qBAAqB,YAA3B;AAFJ;AAAA,+BAGyB,UAAU,WAAV,CAAsB,YAAtB,CAHzB;;AAAA;AAGU,8BAHV;;AAAA,6BAIQ,MAJR;AAAA;AAAA;AAAA;;AAKQ,gCAAQ,KAAR,CAAc,SAAd;AACI,2BANZ,GAMkB,QAAQ,GAAR,EANlB;;AAOQ,8BAAM,UAAU,GAAhB;;AAPR,8BAQY,QAAQ,MARpB;AAAA;AAAA;AAAA;;AAAA;AAAA,+BASkB,QAAQ,uBAAR,EATlB;;AAAA;AAAA;AAAA;;AAAA;AAAA;AAAA,+BAWkB,QAAQ,wBAAR,EAXlB;;AAAA;AAAA;AAAA;;AAAA;AAcQ,gCAAQ,KAAR,CAAc,uBAAuB,YAAvB,GAAsC,iBAApD;;AAdR;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,K;;oBAAe,iB;;;;;;iEAkBf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAEc,iCAFd,GAE0B,eAAK,OAAL,CAAa,oBAAQ,IAAR,CAAa,KAAb,MAAwB,GAArC,CAF1B;;AAGQ,8BAAM,uBAAuB,SAA7B;AAHR;AAAA,+BAIc,kBAAkB,SAAlB,EAA6B,oBAAQ,GAArC,CAJd;;AAAA;AAAA;AAAA;;AAAA;AAAA;AAAA;;AAMQ,gCAAQ,KAAR;;AANR;AAQI,gCAAQ,IAAR;;AARJ;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,K;;oBAAe,I;;;;;AAtCf;;;;AACA;;;;AACA;;;;AAEA;;;;AACA;;IAAY,S;;AACZ;;IAAY,O;;;;;;AAEZ,IAAM,QAAQ,qBAAM,6BAAN,CAAd;AACA,IAAM,UAAU,kBAAI,OAApB;;AAEA,oBACK,OADL,CACa,OADb,EAEK,KAFL,CAEW,iCAFX,EAGK,MAHL,CAGY,iBAHZ,EAG+B,yDAH/B,EAIK,WAJL,CAIiB,qCAJjB,EAKK,KALL,CAKW,QAAQ,IALnB;;AAOA","file":"libs/koa2g-update.js","sourcesContent":["import program from 'commander';\nimport path from 'path';\nimport Debug from 'debug';\n\nimport pkg from '../../package.json';\nimport * as path_util from '../utils/path.js';\nimport * as command from '../utils/command.js';\n\nconst debug = Debug('koa2-generator:koa2g-update');\nconst version = pkg.version;\n\nprogram\n    .version(version)\n    .usage('[options] [dir](defaults to ./)')\n    .option('-e, --end [end]', 'front(front end) or back(back end). (defaults to front)')\n    .description('update dependencies for the project')\n    .parse(process.argv);\n\nmain();\n\nasync function updateApplication(directory, end) {\n    const package_file = path.join(directory, 'package.json');\n    debug('target package: ' + package_file);\n    const exists = await path_util.existedFile(package_file);\n    if (exists) {\n        process.chdir(directory);\n        var cwd = process.cwd();\n        debug('cwd: ' + cwd);\n        if (end === 'back') {\n            await command.installBackDependencies();\n        } else {\n            await command.installFrontDependencies();\n        }\n    } else {\n        console.error('aborting! because ' + package_file + ' is not existed');\n    }\n}\n\nasync function main() {\n    try {\n        const directory = path.resolve(program.args.shift() || '.');\n        debug('target directory: ' + directory);\n        await updateApplication(directory, program.end);\n    } catch (err) {\n        console.error(err);\n    }\n    process.exit();\n}\n"],"sourceRoot":"/source/"}