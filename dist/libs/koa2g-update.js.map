{"version":3,"sources":["libs/koa2g-update.js"],"names":[],"mappings":";;;;;gEAmBA,iBAAiC,SAAjC;AAAA;AAAA;AAAA;AAAA;AAAA;AACQ,oCADR,GACuB,KAAK,IAAL,CAAU,SAAV,EAAqB,cAArB,CADvB;;AAEI,gCAAQ,GAAR,CAAY,cAAc,YAA1B;AAFJ;AAAA,+BAGuB,UAAU,WAAV,CAAsB,YAAtB,CAHvB;;AAAA;AAGQ,8BAHR;;AAAA,6BAIQ,MAJR;AAAA;AAAA;AAAA;;AAKQ,gCAAQ,KAAR,CAAc,SAAd;AACI,2BANZ,GAMkB,QAAQ,GAAR,EANlB;;AAOQ,gCAAQ,GAAR,CAAY,UAAU,GAAtB;AAPR;AAAA,+BAQc,QAAQ,sBAAR,EARd;;AAAA;AAAA;AAAA;;AAAA;AAUQ,gCAAQ,KAAR,CAAc,uBAAuB,YAAvB,GAAsC,iBAApD;;AAVR;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,K;;oBAAe,iB;;;;;;iEAcf;AAAA;AAAA;AAAA;AAAA;AAAA;AACQ,iCADR,GACoB,IADpB;;AAEI,4BAAI,QAAQ,SAAR,IAAqB,QAAQ,SAAR,CAAkB,MAAlB,GAA2B,CAApD,EAAuD;AACnD,wCAAY,QAAQ,SAApB;AACH;AACD,gCAAQ,GAAR,CAAY,gBAAgB,SAA5B;AALJ;AAAA,+BAMU,kBAAkB,SAAlB,CANV;;AAAA;AAOI,gCAAQ,IAAR;;AAPJ;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,K;;oBAAe,I;;;;;AAzBf;;IAAY,S;;AACZ;;IAAY,O;;;;AARZ,IAAM,UAAU,QAAQ,WAAR,CAAhB;AACA,IAAM,OAAO,QAAQ,MAAR,CAAb;AACA,IAAM,KAAK,QAAQ,IAAR,CAAX;AACA,IAAM,MAAM,QAAQ,oBAAR,CAAZ;;AAEA,IAAI,UAAU,IAAI,OAAlB;;AAKA,QACK,OADL,CACa,OADb,EAEK,KAFL,CAEW,WAFX,EAGK,MAHL,CAGY,iBAHZ,EAG+B,uCAH/B,EAIK,KAJL,CAIW,QAAQ,IAJnB;;AAMA","file":"libs/koa2g-update.js","sourcesContent":["\nconst program = require('commander');\nconst path = require('path');\nconst fs = require('fs');\nconst pkg = require('../../package.json');\n\nvar version = pkg.version;\n\nimport * as path_util from '../utils/path.js';\nimport * as command from '../utils/command.js';\n\nprogram\n    .version(version)\n    .usage('[options]')\n    .option('-d, --directory', 'the target directory (defaults to ./)')\n    .parse(process.argv);\n\nmain();\n\nasync function updateApplication(directory) {\n    let package_file = path.join(directory, 'package.json');\n    console.log('package: ' + package_file);\n    let exists = await path_util.existedFile(package_file);\n    if (exists) {\n        process.chdir(directory);\n        var cwd = process.cwd();\n        console.log('cwd: ' + cwd);\n        await command.installAllDependencies();\n    } else {\n        console.error('aborting! because ' + package_file + ' is not existed');\n    }\n}\n\nasync function main() {\n    let directory = './';\n    if (program.directory && program.directory.length > 0) {\n        directory = program.directory;\n    }\n    console.log('directory: ' + directory);\n    await updateApplication(directory);\n    process.exit();\n}\n"],"sourceRoot":"/source/"}