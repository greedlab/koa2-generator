{"version":3,"sources":["utils/copy.js"],"names":[],"mappings":";;;;;;;;;;;;gEAcO,iBAAoB,IAApB,EAAyB,EAAzB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,8BACC,KAAK,MAAL,GAAc,CAAd,IAAmB,GAAG,MAAH,GAAY,CADhC;AAAA;AAAA;AAAA;;AAEK,2BAFL,GAEW,QAAQ,GAAR,EAFX;AAGK,gCAHL,GAGgB,eAAK,OAAL,CAAa,GAAb,EAAkB,IAAlB,CAHhB;AAIK,mCAJL,GAImB,eAAK,OAAL,CAAa,GAAb,EAAkB,EAAlB,CAJnB;AAAA;AAAA,+BAKc,QAAQ,GAAR,CAAY,IAAZ,EAAiB,CAAC,KAAD,EAAO,QAAP,EAAgB,WAAhB,CAAjB,CALd;;AAAA;AAAA;;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,K;;oBAAe,I;;;;;;iEASf,kBAA4B,IAA5B,EAAiC,EAAjC;AAAA;AAAA;AAAA;AAAA;AAAA;AACH,8BAAM,UAAU,IAAV,GAAiB,MAAjB,GAA0B,EAAhC;AADG;AAAA,+BAEe,aAAa,IAAb,CAFf;;AAAA;AAEC,6BAFD;;AAGH,8BAAM,OAAN;AAAA,yFAAc,kBAAgB,IAAhB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,sDACN,SAAS,MAAT,IACG,SAAS,YADZ,IAEG,SAAS,cAFZ,IAGG,SAAS,SAJN;AAAA;AAAA;AAAA;;AAAA;;AAAA;AAON,wDAPM,GAOK,eAAK,IAAL,CAAU,IAAV,EAAgB,IAAhB,CAPL;AAAA;AAAA,uDAQJ,KAAK,QAAL,EAAe,EAAf,CARI;;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,6BAAd;;AAAA;AAAA;AAAA;AAAA;;AAHG;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,K;;oBAAe,Y;;;;;AAnBtB;;;;AACA;;;;AAEA;;;;AAEA;;IAAY,O;;;;;;AAEZ,IAAM,QAAQ,qBAAM,2BAAN,CAAd,C,CAXA;;;;AAYA,IAAM,eAAe,mBAAQ,SAAR,CAAkB,aAAG,OAArB,CAArB","file":"utils/copy.js","sourcesContent":["/**\n * Created by Bell on 16/8/12.\n */\n\nimport path from 'path';\nimport fs from 'fs';\nimport Promise from 'bluebird';\nimport Debug from 'debug';\n\nimport * as command from './command.js';\n\nconst debug = Debug('koa2-generator:utils-copy');\nconst readdirAsync = Promise.promisify(fs.readdir);\n\nexport async function copy(from,to) {\n    if (from.length > 0 && to.length > 0) {\n        let cwd = process.cwd();\n        let fromPath = path.resolve(cwd, from);\n        let toDirectory = path.resolve(cwd, to);\n        return await command.run('cp',['-rf',fromPath,toDirectory]);\n    }\n}\n\nexport async function copyTemplate(from,to) {\n    debug('copy ' + from + ' to ' + to);\n    let files = await readdirAsync(from);\n    files.forEach(async function (item) {\n        if (item === '.git'\n            || item === '.gitignore'\n            || item === 'package.json'\n            || item === 'LICENSE') {\n            return;\n        }\n        let fromPath = path.join(from, item);\n        await copy(fromPath, to);\n    });\n}\n"],"sourceRoot":"/source/"}